/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Artista_Banda;
import model.Cliente;
import model.Conection.SqlDB;
import model.DAO.Artista_BandaDAO;
import model.DAO.ClienteDAO;
import model.DAO.EventoDAO;
import model.DAO.LugaresDAO;
import model.DAO.PromotorDAO;
import model.DAO.TicketDAO;
import model.Evento;
import model.Lugares;
import model.Promotor;
import model.Ticket;

/**
 *
 * @author Erick
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblEvento = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblTicket = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblArtista = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblPromotor = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblLugar = new javax.swing.JTable();
        lblSubtitulo = new javax.swing.JLabel();
        btnConsultar = new javax.swing.JButton();
        btnCrear = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        jScrollPane2.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(184, 176, 242));
        jPanel1.setForeground(new java.awt.Color(204, 204, 255));

        lblTitulo.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(102, 0, 0));
        lblTitulo.setText("CONCERTHUB");

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Erick\\Downloads\\a90ed6e0-c01b-4fb4-8e50-8211dba0cb67 (2).jpg")); // NOI18N
        jLabel2.setText("jLabel2");

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setForeground(new java.awt.Color(255, 153, 153));

        tblCliente.setBackground(new java.awt.Color(204, 255, 255));
        tblCliente.setForeground(new java.awt.Color(0, 0, 0));
        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID cliente", "ID persona"
            }
        ));
        jScrollPane1.setViewportView(tblCliente);

        jTabbedPane1.addTab("Clientes", jScrollPane1);

        tblEvento.setBackground(new java.awt.Color(204, 255, 255));
        tblEvento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID evento", "ID lugar", "Nombre", "Fecha"
            }
        ));
        jScrollPane3.setViewportView(tblEvento);

        jTabbedPane1.addTab("Eventos", jScrollPane3);

        tblTicket.setBackground(new java.awt.Color(204, 255, 255));
        tblTicket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID ticket", "ID cliente", "ID evento", "Tipo", "Precio", "Estado"
            }
        ));
        jScrollPane4.setViewportView(tblTicket);

        jTabbedPane1.addTab("Tickets", jScrollPane4);

        tblArtista.setBackground(new java.awt.Color(204, 255, 255));
        tblArtista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID artista", "Nombre", "Genero", "Integrantes"
            }
        ));
        jScrollPane5.setViewportView(tblArtista);

        jTabbedPane1.addTab("Artistas", jScrollPane5);

        tblPromotor.setBackground(new java.awt.Color(204, 255, 255));
        tblPromotor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID promotor", "Nombre", "Tipo", "Celular", "Correo"
            }
        ));
        jScrollPane6.setViewportView(tblPromotor);

        jTabbedPane1.addTab("Promotores", jScrollPane6);

        tblLugar.setBackground(new java.awt.Color(204, 255, 255));
        tblLugar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID lugar", "Nombre", "Direcci√≥n", "Capacidad"
            }
        ));
        jScrollPane7.setViewportView(tblLugar);

        jTabbedPane1.addTab("Lugares", jScrollPane7);

        lblSubtitulo.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 24)); // NOI18N
        lblSubtitulo.setForeground(new java.awt.Color(102, 0, 102));
        lblSubtitulo.setText("Gestionar");

        btnConsultar.setBackground(new java.awt.Color(255, 255, 204));
        btnConsultar.setForeground(new java.awt.Color(0, 0, 102));
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnCrear.setBackground(new java.awt.Color(255, 255, 204));
        btnCrear.setForeground(new java.awt.Color(0, 0, 102));
        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(255, 255, 204));
        btnActualizar.setForeground(new java.awt.Color(0, 0, 102));
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(255, 255, 204));
        btnEliminar.setForeground(new java.awt.Color(0, 0, 102));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(lblTitulo)
                        .addGap(65, 65, 65)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(lblSubtitulo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnConsultar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCrear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblTitulo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSubtitulo)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConsultar)
                    .addComponent(btnCrear)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(247, 247, 247))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
       int index = jTabbedPane1.getSelectedIndex();

    switch (index) {
        case 0: 
            ClienteDAO clienteDAO = new ClienteDAO();
            List<Cliente> clientes = clienteDAO.readAll();
            DefaultTableModel modeloCliente = (DefaultTableModel) tblCliente.getModel();
            modeloCliente.setRowCount(0);
            for (Cliente c : clientes) {
                modeloCliente.addRow(new Object[]{c.getClienteID(), c.getPersonaID()});
            }
            break;

        case 1: 
            EventoDAO eventoDAO = new EventoDAO();
            List<Evento> eventos = eventoDAO.readAll();
            DefaultTableModel modeloEvento = (DefaultTableModel) tblEvento.getModel();
            modeloEvento.setRowCount(0);
            for (Evento e : eventos) {
                modeloEvento.addRow(new Object[]{e.getEventoID(), e.getLugarID(), e.getNombreEvento(), e.getFecha()});
            }
            break;

        case 2: 
            TicketDAO ticketDAO = new TicketDAO();
            List<Ticket> tickets = ticketDAO.readAll();
            DefaultTableModel modeloTicket = (DefaultTableModel) tblTicket.getModel();
            modeloTicket.setRowCount(0);
            for (Ticket t : tickets) {
                modeloTicket.addRow(new Object[]{
                    t.getTicketID(), t.getClienteID(), t.getEventoID(),
                    t.getTipo().name(), t.getPrecio(), t.getEstado().name()
                });
            }
            break;

        case 3: 
            Artista_BandaDAO artistaDAO = new Artista_BandaDAO();
            List<Artista_Banda> artistas = artistaDAO.readAll();
            DefaultTableModel modeloArtista = (DefaultTableModel) tblArtista.getModel();
            modeloArtista.setRowCount(0);
            for (Artista_Banda a : artistas) {
                modeloArtista.addRow(new Object[]{
                    a.getArtistaID(), a.getNombre(), a.getGenero(), a.getIntegrantes()
                });
            }
            break;

        case 4: 
            PromotorDAO promotorDAO = new PromotorDAO();
            List<Promotor> promotores = promotorDAO.readAll();
            DefaultTableModel modeloPromotor = (DefaultTableModel) tblPromotor.getModel();
            modeloPromotor.setRowCount(0);
            for (Promotor p : promotores) {
                modeloPromotor.addRow(new Object[]{
                    p.getPromotorID(), p.getNombre(), p.getTipo().name(), p.getCelular(), p.getCorreo()
                });
            }
            break;

        case 5: 
            LugaresDAO lugarDAO = new LugaresDAO();
            List<Lugares> lugares = lugarDAO.readAll();
            DefaultTableModel modeloLugar = (DefaultTableModel) tblLugar.getModel();
            modeloLugar.setRowCount(0);
            for (Lugares l : lugares) {
                modeloLugar.addRow(new Object[]{
                    l.getLugarID(), l.getNombre(), l.getDireccion(), l.getCapacidad()
                });
            }
            break;
    }
}

public List<Cliente> obtenerTodos() {
    List<Cliente> lista = new ArrayList<>();
    try (Connection conn = SqlDB.getCo().getCnn()) {
        PreparedStatement stmt = conn.prepareStatement("SELECT * FROM Cliente");
        ResultSet rs = stmt.executeQuery();
        while (rs.next()) {
            Cliente c = new Cliente();
            c.setClienteID(rs.getInt("clienteID"));
            c.setPersonaID(rs.getInt("personaID"));
            lista.add(c);
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }   catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    return lista;
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
       
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
       int index = jTabbedPane1.getSelectedIndex();

    switch (index) {
        case 0: 
            int filaCliente = tblCliente.getSelectedRow();
            if (filaCliente != -1) {
                int clienteID = (int) tblCliente.getValueAt(filaCliente, 0);
                ClienteDAO clienteDAO = new ClienteDAO();
                clienteDAO.eliminar(clienteID);
            }
            break;

        case 1: 
            int filaEvento = tblEvento.getSelectedRow();
            if (filaEvento != -1) {
                int eventoID = (int) tblEvento.getValueAt(filaEvento, 0);
                EventoDAO eventoDAO = new EventoDAO();
                eventoDAO.delete(eventoID);
            }
            break;

        case 2: 
            int filaTicket = tblTicket.getSelectedRow();
            if (filaTicket != -1) {
                int ticketID = (int) tblTicket.getValueAt(filaTicket, 0);
                TicketDAO ticketDAO = new TicketDAO();
                ticketDAO.delete(ticketID);
            }
            break;

        case 3: 
            int filaArtista = tblArtista.getSelectedRow();
            if (filaArtista != -1) {
                int artistaID = (int) tblArtista.getValueAt(filaArtista, 0);
                Artista_BandaDAO artistaDAO = new Artista_BandaDAO();
                artistaDAO.delete(artistaID);
            }
            break;

        case 4: 
            int filaPromotor = tblPromotor.getSelectedRow();
            if (filaPromotor != -1) {
                int promotorID = (int) tblPromotor.getValueAt(filaPromotor, 0);
                PromotorDAO promotorDAO = new PromotorDAO();
                promotorDAO.delete(promotorID);
            }
            break;

        case 5: 
            int filaLugar = tblLugar.getSelectedRow();
            if (filaLugar != -1) {
                int lugarID = (int) tblLugar.getValueAt(filaLugar, 0);
                LugaresDAO lugarDAO = new LugaresDAO();
                lugarDAO.delete(lugarID);
            }
            break;
    }

    btnConsultarActionPerformed(null);
    JOptionPane.showMessageDialog(this, "Registro eliminado con √©xito.");
}

public void delete(int id) {
    try (Connection conn = SqlDB.getCo().getCnn()) {
        PreparedStatement stmt = conn.prepareStatement("DELETE FROM Cliente WHERE clienteID = ?");
        stmt.setInt(1, id);
        stmt.executeUpdate();
    } catch (SQLException | ClassNotFoundException e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_btnEliminarActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblSubtitulo;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblArtista;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTable tblEvento;
    private javax.swing.JTable tblLugar;
    private javax.swing.JTable tblPromotor;
    private javax.swing.JTable tblTicket;
    // End of variables declaration//GEN-END:variables
}
